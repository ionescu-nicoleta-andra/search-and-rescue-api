version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    image: myapp-app
    container_name: myapp-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./vendor:/var/www/html/vendor
      - ./node_modules:/var/www/html/node_modules
    environment:
      - APP_ENV=local
      - APP_DEBUG=1
      - DB_HOST=db
      - DB_DATABASE=laravel
      - DB_USERNAME=root
      - DB_PASSWORD=secret
    depends_on:
      - db
    networks:
      - myapp-network

  nginx:
    image: nginx:1.25-alpine
    container_name: myapp-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html:delegated
      - ./docker/nginx/:/etc/nginx/conf.d/
    depends_on:
      - app
    networks:
      - myapp-network

  db:
    image: mysql:8.0
    container_name: myapp-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    ports:
      - "3307:3306"
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - myapp-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: myapp-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db        # points to your MySQL container
      PMA_PORT: 3306      # MySQL port inside Docker network
    ports:
      - "8081:80"         # access via http://localhost:8081
    depends_on:
      - db
    networks:
      - myapp-network

volumes:
  dbdata:

networks:
  myapp-network:
    driver: bridge
